// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: xchain.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Acl;
@class AkSet;
@class AkSets;
@class BCSpeeds;
@class BCStatus;
@class ContractResponse;
@class ContractStatus;
@class DposNominateInfo;
@class DposStatus;
@class Header;
@class IdentityAuth;
@class InternalBlock;
@class InvokeRPCRequest;
@class InvokeRequest;
@class InvokeResponse;
@class LedgerMeta;
@class ModifyBlock;
@class NativeCodeDesc;
@class NativeCodeStatus;
@class PermissionModel;
@class QuorumCert;
@class ResourceLimit;
@class SignatureInfo;
@class Speeds;
@class SystemsStatus;
@class TokenDetail;
@class TokenFrozenDetail;
@class TokenFrozenDetails;
@class Transaction;
@class TxDataAccount;
@class TxInput;
@class TxInputExt;
@class TxOutput;
@class TxOutputExt;
@class TxStatus;
@class Utxo;
@class UtxoMeta;
@class UtxoOutput;
@class XuperSignature;
@class voteRecord;
@class votedRecord;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum XChainErrorEnum

typedef GPB_ENUM(XChainErrorEnum) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  XChainErrorEnum_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  XChainErrorEnum_Success = 0,
  XChainErrorEnum_UnknowError = 1,
  XChainErrorEnum_ConnectRefuse = 2,
  XChainErrorEnum_NotEnoughUtxoError = 3,
  XChainErrorEnum_UtxovmAlreadyUnconfirmError = 4,
  XChainErrorEnum_UtxovmNotFoundError = 5,
  XChainErrorEnum_InputOutputNotEqualError = 6,
  XChainErrorEnum_TxNotFoundError = 7,
  XChainErrorEnum_TxSignError = 8,
  XChainErrorEnum_BlockchainNotexist = 9,
  XChainErrorEnum_ValidateError = 10,
  XChainErrorEnum_CannotSyncBlockError = 11,
  XChainErrorEnum_ConfirmBlockError = 12,
  XChainErrorEnum_UtxovmPlayError = 13,
  XChainErrorEnum_WalkError = 14,
  XChainErrorEnum_NotReadyError = 15,
  XChainErrorEnum_BlockExistError = 16,
  XChainErrorEnum_RootBlockExistError = 17,
  XChainErrorEnum_TxDuplicateError = 19,
  XChainErrorEnum_ServiceRefusedError = 20,
  XChainErrorEnum_TxdataSignError = 21,
  XChainErrorEnum_TxSleError = 25,
  XChainErrorEnum_TxFeeNotEnoughError = 26,
  XChainErrorEnum_UtxoSignError = 28,
  XChainErrorEnum_DposQueryError = 31,
  XChainErrorEnum_RwsetInvalidError = 33,
  XChainErrorEnum_RwaclInvalidError = 34,
  XChainErrorEnum_GasNotEnoughError = 35,
  XChainErrorEnum_TxVersionInvalidError = 36,
  XChainErrorEnum_ComplianceCheckNotApproved = 37,
  XChainErrorEnum_AccountContractStatusError = 38,
  XChainErrorEnum_TxVerificationError = 40,
};

GPBEnumDescriptor *XChainErrorEnum_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL XChainErrorEnum_IsValidValue(int32_t value);

#pragma mark - Enum TransactionStatus

/** TransactionStatus is the status of transaction */
typedef GPB_ENUM(TransactionStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  TransactionStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** Undefined status */
  TransactionStatus_Undefine = 0,

  /** Transaction not exist */
  TransactionStatus_Noexist = 1,

  /** Transaction have been confirmed */
  TransactionStatus_Confirm = 2,

  /** Transaction is on the furcation */
  TransactionStatus_Furcation = 3,

  /** Transaction have not been confirmed */
  TransactionStatus_Unconfirm = 4,
};

GPBEnumDescriptor *TransactionStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL TransactionStatus_IsValidValue(int32_t value);

#pragma mark - Enum PermissionRule

/** --------   Account and Permission Section -------- */
typedef GPB_ENUM(PermissionRule) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PermissionRule_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 无权限控制 */
  PermissionRule_Null = 0,

  /** 签名阈值策略 */
  PermissionRule_SignThreshold = 1,

  /** AKSet签名策略 */
  PermissionRule_SignAkset = 2,

  /** 签名率策略 */
  PermissionRule_SignRate = 3,

  /** 签名个数策略 */
  PermissionRule_SignSum = 4,

  /** CA服务器鉴权 */
  PermissionRule_CaServer = 5,

  /** 社区治理 */
  PermissionRule_CommunityVote = 6,
};

GPBEnumDescriptor *PermissionRule_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PermissionRule_IsValidValue(int32_t value);

#pragma mark - Enum ResourceType

typedef GPB_ENUM(ResourceType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ResourceType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ResourceType_Cpu = 0,
  ResourceType_Memory = 1,
  ResourceType_Disk = 2,

  /** the fee used in kernel contract */
  ResourceType_Xfee = 3,
};

GPBEnumDescriptor *ResourceType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ResourceType_IsValidValue(int32_t value);

#pragma mark - Enum Block_EBlockStatus

typedef GPB_ENUM(Block_EBlockStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Block_EBlockStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Block_EBlockStatus_Error = 0,
  Block_EBlockStatus_Trunk = 1,
  Block_EBlockStatus_Branch = 2,
  Block_EBlockStatus_Noexist = 3,
};

GPBEnumDescriptor *Block_EBlockStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Block_EBlockStatus_IsValidValue(int32_t value);

#pragma mark - XchainRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface XchainRoot : GPBRootObject
@end

#pragma mark - Header

typedef GPB_ENUM(Header_FieldNumber) {
  Header_FieldNumber_Logid = 1,
  Header_FieldNumber_FromNode = 2,
  Header_FieldNumber_Error = 3,
};

@interface Header : GPBMessage

/** 如果logid没填写，生成一个 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *logid;

/** call rpc client address，客户端可以为空，节点一定要写自己的address */
@property(nonatomic, readwrite, copy, null_resettable) NSString *fromNode;

@property(nonatomic, readwrite) XChainErrorEnum error;

@end

/**
 * Fetches the raw value of a @c Header's @c error property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Header_Error_RawValue(Header *message);
/**
 * Sets the raw value of an @c Header's @c error property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetHeader_Error_RawValue(Header *message, int32_t value);

#pragma mark - TxDataAccount

typedef GPB_ENUM(TxDataAccount_FieldNumber) {
  TxDataAccount_FieldNumber_Address = 1,
  TxDataAccount_FieldNumber_Amount = 2,
  TxDataAccount_FieldNumber_FrozenHeight = 3,
};

@interface TxDataAccount : GPBMessage

/** 地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *address;

/** 金额 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *amount;

/** 冻结高度 */
@property(nonatomic, readwrite) int64_t frozenHeight;

@end

#pragma mark - TxData

typedef GPB_ENUM(TxData_FieldNumber) {
  TxData_FieldNumber_Txid = 1,
  TxData_FieldNumber_Bcname = 2,
  TxData_FieldNumber_FromAddr = 3,
  TxData_FieldNumber_FromPubkey = 4,
  TxData_FieldNumber_FromScrkey = 5,
  TxData_FieldNumber_AccountArray = 6,
  TxData_FieldNumber_Nonce = 8,
  TxData_FieldNumber_Timestamp = 9,
  TxData_FieldNumber_Desc = 12,
  TxData_FieldNumber_Header = 13,
  TxData_FieldNumber_UserSign = 14,
  TxData_FieldNumber_Version = 15,
};

@interface TxData : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

/** Transaction id */
@property(nonatomic, readwrite, copy, null_resettable) NSData *txid;

/** Block name */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bcname;

/** Account which start the transaction */
@property(nonatomic, readwrite, copy, null_resettable) NSString *fromAddr;

/** The pk of the account which start the transaction */
@property(nonatomic, readwrite, copy, null_resettable) NSString *fromPubkey;

/** The sk of the account which start the transaction */
@property(nonatomic, readwrite, copy, null_resettable) NSString *fromScrkey;

/**
 * if user don't want to provide scrkey, he should sign the txdata into
 * user_sign
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSData *userSign;

/** The account list accept tx */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<TxDataAccount*> *accountArray;
/** The number of items in @c accountArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger accountArray_Count;

/** Random number used to avoid replay attacks */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nonce;

/** Timestamp to launch the Tx */
@property(nonatomic, readwrite) int64_t timestamp;

@property(nonatomic, readwrite, copy, null_resettable) NSData *desc;

/** tx version */
@property(nonatomic, readwrite) int32_t version;

@end

#pragma mark - TxStatus

typedef GPB_ENUM(TxStatus_FieldNumber) {
  TxStatus_FieldNumber_Header = 1,
  TxStatus_FieldNumber_Bcname = 2,
  TxStatus_FieldNumber_Txid = 3,
  TxStatus_FieldNumber_Status = 4,
  TxStatus_FieldNumber_Distance = 5,
  TxStatus_FieldNumber_Tx = 7,
};

@interface TxStatus : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bcname;

@property(nonatomic, readwrite, copy, null_resettable) NSData *txid;

/** 当前状态 */
@property(nonatomic, readwrite) TransactionStatus status;

/** 离主干末端的距离（如果在主干上) */
@property(nonatomic, readwrite) int64_t distance;

@property(nonatomic, readwrite, strong, null_resettable) Transaction *tx;
/** Test to see if @c tx has been set. */
@property(nonatomic, readwrite) BOOL hasTx;

@end

/**
 * Fetches the raw value of a @c TxStatus's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t TxStatus_Status_RawValue(TxStatus *message);
/**
 * Sets the raw value of an @c TxStatus's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetTxStatus_Status_RawValue(TxStatus *message, int32_t value);

#pragma mark - BatchTxs

typedef GPB_ENUM(BatchTxs_FieldNumber) {
  BatchTxs_FieldNumber_Header = 1,
  BatchTxs_FieldNumber_TxsArray = 2,
};

@interface BatchTxs : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<TxStatus*> *txsArray;
/** The number of items in @c txsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger txsArray_Count;

@end

#pragma mark - Block

typedef GPB_ENUM(Block_FieldNumber) {
  Block_FieldNumber_Header = 1,
  Block_FieldNumber_Bcname = 2,
  Block_FieldNumber_Blockid = 3,
  Block_FieldNumber_Status = 4,
  Block_FieldNumber_Block = 5,
};

@interface Block : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bcname;

@property(nonatomic, readwrite, copy, null_resettable) NSData *blockid;

@property(nonatomic, readwrite) Block_EBlockStatus status;

@property(nonatomic, readwrite, strong, null_resettable) InternalBlock *block;
/** Test to see if @c block has been set. */
@property(nonatomic, readwrite) BOOL hasBlock;

@end

/**
 * Fetches the raw value of a @c Block's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Block_Status_RawValue(Block *message);
/**
 * Sets the raw value of an @c Block's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetBlock_Status_RawValue(Block *message, int32_t value);

#pragma mark - BlockID

typedef GPB_ENUM(BlockID_FieldNumber) {
  BlockID_FieldNumber_Bcname = 1,
  BlockID_FieldNumber_Blockid = 2,
  BlockID_FieldNumber_NeedContent = 3,
  BlockID_FieldNumber_Header = 4,
};

@interface BlockID : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bcname;

@property(nonatomic, readwrite, copy, null_resettable) NSData *blockid;

/** if need content */
@property(nonatomic, readwrite) BOOL needContent;

@end

#pragma mark - BlockHeight

typedef GPB_ENUM(BlockHeight_FieldNumber) {
  BlockHeight_FieldNumber_Bcname = 1,
  BlockHeight_FieldNumber_Height = 2,
  BlockHeight_FieldNumber_Header = 3,
};

@interface BlockHeight : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bcname;

@property(nonatomic, readwrite) int64_t height;

@end

#pragma mark - CommonReply

typedef GPB_ENUM(CommonReply_FieldNumber) {
  CommonReply_FieldNumber_Header = 1,
};

@interface CommonReply : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@end

#pragma mark - CommonIn

typedef GPB_ENUM(CommonIn_FieldNumber) {
  CommonIn_FieldNumber_Header = 1,
};

@interface CommonIn : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@end

#pragma mark - TokenDetail

typedef GPB_ENUM(TokenDetail_FieldNumber) {
  TokenDetail_FieldNumber_Bcname = 1,
  TokenDetail_FieldNumber_Balance = 2,
  TokenDetail_FieldNumber_Error = 3,
};

@interface TokenDetail : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *bcname;

@property(nonatomic, readwrite, copy, null_resettable) NSString *balance;

@property(nonatomic, readwrite) XChainErrorEnum error;

@end

/**
 * Fetches the raw value of a @c TokenDetail's @c error property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t TokenDetail_Error_RawValue(TokenDetail *message);
/**
 * Sets the raw value of an @c TokenDetail's @c error property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetTokenDetail_Error_RawValue(TokenDetail *message, int32_t value);

#pragma mark - AddressStatus

typedef GPB_ENUM(AddressStatus_FieldNumber) {
  AddressStatus_FieldNumber_Header = 1,
  AddressStatus_FieldNumber_Address = 2,
  AddressStatus_FieldNumber_BcsArray = 3,
};

@interface AddressStatus : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, copy, null_resettable) NSString *address;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<TokenDetail*> *bcsArray;
/** The number of items in @c bcsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger bcsArray_Count;

@end

#pragma mark - TokenFrozenDetail

typedef GPB_ENUM(TokenFrozenDetail_FieldNumber) {
  TokenFrozenDetail_FieldNumber_Balance = 1,
  TokenFrozenDetail_FieldNumber_IsFrozen = 2,
};

@interface TokenFrozenDetail : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *balance;

@property(nonatomic, readwrite) BOOL isFrozen;

@end

#pragma mark - TokenFrozenDetails

typedef GPB_ENUM(TokenFrozenDetails_FieldNumber) {
  TokenFrozenDetails_FieldNumber_Bcname = 1,
  TokenFrozenDetails_FieldNumber_TfdArray = 2,
  TokenFrozenDetails_FieldNumber_Error = 3,
};

@interface TokenFrozenDetails : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *bcname;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<TokenFrozenDetail*> *tfdArray;
/** The number of items in @c tfdArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger tfdArray_Count;

@property(nonatomic, readwrite) XChainErrorEnum error;

@end

/**
 * Fetches the raw value of a @c TokenFrozenDetails's @c error property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t TokenFrozenDetails_Error_RawValue(TokenFrozenDetails *message);
/**
 * Sets the raw value of an @c TokenFrozenDetails's @c error property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetTokenFrozenDetails_Error_RawValue(TokenFrozenDetails *message, int32_t value);

#pragma mark - AddressBalanceStatus

typedef GPB_ENUM(AddressBalanceStatus_FieldNumber) {
  AddressBalanceStatus_FieldNumber_Header = 1,
  AddressBalanceStatus_FieldNumber_Address = 2,
  AddressBalanceStatus_FieldNumber_TfdsArray = 3,
};

@interface AddressBalanceStatus : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, copy, null_resettable) NSString *address;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<TokenFrozenDetails*> *tfdsArray;
/** The number of items in @c tfdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger tfdsArray_Count;

@end

#pragma mark - TxInput

typedef GPB_ENUM(TxInput_FieldNumber) {
  TxInput_FieldNumber_RefTxid = 1,
  TxInput_FieldNumber_RefOffset = 2,
  TxInput_FieldNumber_FromAddr = 5,
  TxInput_FieldNumber_Amount = 6,
  TxInput_FieldNumber_FrozenHeight = 7,
};

/**
 * Transaction input
 **/
@interface TxInput : GPBMessage

/** The transaction id referenced to */
@property(nonatomic, readwrite, copy, null_resettable) NSData *refTxid;

/** The output offset of the transaction referenced to */
@property(nonatomic, readwrite) int32_t refOffset;

/** The address of the launcher */
@property(nonatomic, readwrite, copy, null_resettable) NSData *fromAddr;

/** The amount of the transaction */
@property(nonatomic, readwrite, copy, null_resettable) NSData *amount;

/** Frozen height */
@property(nonatomic, readwrite) int64_t frozenHeight;

@end

#pragma mark - TxOutput

typedef GPB_ENUM(TxOutput_FieldNumber) {
  TxOutput_FieldNumber_Amount = 1,
  TxOutput_FieldNumber_ToAddr = 2,
  TxOutput_FieldNumber_FrozenHeight = 4,
};

/**
 * Transaction output
 **/
@interface TxOutput : GPBMessage

/** The amount of the transaction */
@property(nonatomic, readwrite, copy, null_resettable) NSData *amount;

/** The address of the launcher */
@property(nonatomic, readwrite, copy, null_resettable) NSData *toAddr;

/** Fronzen height */
@property(nonatomic, readwrite) int64_t frozenHeight;

@end

#pragma mark - XuperSignature

typedef GPB_ENUM(XuperSignature_FieldNumber) {
  XuperSignature_FieldNumber_PublicKeysArray = 1,
  XuperSignature_FieldNumber_Signature = 2,
};

/**
 * Unified Xuper Signature
 **/
@interface XuperSignature : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *publicKeysArray;
/** The number of items in @c publicKeysArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger publicKeysArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSData *signature;

@end

#pragma mark - Transaction

typedef GPB_ENUM(Transaction_FieldNumber) {
  Transaction_FieldNumber_Txid = 1,
  Transaction_FieldNumber_Blockid = 2,
  Transaction_FieldNumber_TxInputsArray = 3,
  Transaction_FieldNumber_TxOutputsArray = 4,
  Transaction_FieldNumber_Desc = 6,
  Transaction_FieldNumber_Coinbase = 7,
  Transaction_FieldNumber_Nonce = 8,
  Transaction_FieldNumber_Timestamp = 9,
  Transaction_FieldNumber_Version = 10,
  Transaction_FieldNumber_Autogen = 11,
  Transaction_FieldNumber_TxInputsExtArray = 23,
  Transaction_FieldNumber_TxOutputsExtArray = 24,
  Transaction_FieldNumber_ContractRequestsArray = 25,
  Transaction_FieldNumber_Initiator = 26,
  Transaction_FieldNumber_AuthRequireArray = 27,
  Transaction_FieldNumber_InitiatorSignsArray = 28,
  Transaction_FieldNumber_AuthRequireSignsArray = 29,
  Transaction_FieldNumber_ReceivedTimestamp = 30,
  Transaction_FieldNumber_XuperSign = 31,
  Transaction_FieldNumber_ModifyBlock = 32,
};

/**
 * Transaction is the information of the transaction
 **/
@interface Transaction : GPBMessage

/** txid is the id of this transaction */
@property(nonatomic, readwrite, copy, null_resettable) NSData *txid;

/** the blockid the transaction belong to */
@property(nonatomic, readwrite, copy, null_resettable) NSData *blockid;

/** Transaction input list */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<TxInput*> *txInputsArray;
/** The number of items in @c txInputsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger txInputsArray_Count;

/** Transaction output list */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<TxOutput*> *txOutputsArray;
/** The number of items in @c txOutputsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger txOutputsArray_Count;

/** Transaction description or system contract */
@property(nonatomic, readwrite, copy, null_resettable) NSData *desc;

/** Mining rewards */
@property(nonatomic, readwrite) BOOL coinbase;

/** Random number used to avoid replay attacks */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nonce;

/** Timestamp to launch the transaction */
@property(nonatomic, readwrite) int64_t timestamp;

/** tx format version; tx格式版本号 */
@property(nonatomic, readwrite) int32_t version;

/** auto generated tx */
@property(nonatomic, readwrite) BOOL autogen;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<TxInputExt*> *txInputsExtArray;
/** The number of items in @c txInputsExtArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger txInputsExtArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<TxOutputExt*> *txOutputsExtArray;
/** The number of items in @c txOutputsExtArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger txOutputsExtArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<InvokeRequest*> *contractRequestsArray;
/** The number of items in @c contractRequestsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger contractRequestsArray_Count;

/**
 * 权限系统新增字段
 * 交易发起者, 可以是一个Address或者一个Account
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *initiator;

/** 交易发起需要被收集签名的AddressURL集合信息，包括用于utxo转账和用于合约调用 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *authRequireArray;
/** The number of items in @c authRequireArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger authRequireArray_Count;

/** 交易发起者对交易元数据签名，签名的内容包括auth_require字段 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<SignatureInfo*> *initiatorSignsArray;
/** The number of items in @c initiatorSignsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger initiatorSignsArray_Count;

/** 收集到的签名 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<SignatureInfo*> *authRequireSignsArray;
/** The number of items in @c authRequireSignsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger authRequireSignsArray_Count;

/** 节点收到tx的时间戳，不参与签名 */
@property(nonatomic, readwrite) int64_t receivedTimestamp;

/** 统一签名(支持多重签名/环签名等，与initiator_signs/auth_require_signs不同时使用) */
@property(nonatomic, readwrite, strong, null_resettable) XuperSignature *xuperSign;
/** Test to see if @c xuperSign has been set. */
@property(nonatomic, readwrite) BOOL hasXuperSign;

/** 可修改区块链标记 */
@property(nonatomic, readwrite, strong, null_resettable) ModifyBlock *modifyBlock;
/** Test to see if @c modifyBlock has been set. */
@property(nonatomic, readwrite) BOOL hasModifyBlock;

@end

#pragma mark - LedgerMeta

typedef GPB_ENUM(LedgerMeta_FieldNumber) {
  LedgerMeta_FieldNumber_RootBlockid = 1,
  LedgerMeta_FieldNumber_TipBlockid = 2,
  LedgerMeta_FieldNumber_TrunkHeight = 3,
};

/**
 * Ledger metadata
 **/
@interface LedgerMeta : GPBMessage

/** root block id */
@property(nonatomic, readwrite, copy, null_resettable) NSData *rootBlockid;

/** tip block id */
@property(nonatomic, readwrite, copy, null_resettable) NSData *tipBlockid;

/** the height of the trunk */
@property(nonatomic, readwrite) int64_t trunkHeight;

@end

#pragma mark - UtxoMeta

typedef GPB_ENUM(UtxoMeta_FieldNumber) {
  UtxoMeta_FieldNumber_LatestBlockid = 1,
  UtxoMeta_FieldNumber_LockKeyListArray = 2,
  UtxoMeta_FieldNumber_UtxoTotal = 3,
  UtxoMeta_FieldNumber_AvgDelay = 4,
  UtxoMeta_FieldNumber_UnconfirmTxAmount = 5,
  UtxoMeta_FieldNumber_MaxBlockSize = 6,
  UtxoMeta_FieldNumber_ReservedContractsArray = 7,
  UtxoMeta_FieldNumber_ForbiddenContract = 8,
  UtxoMeta_FieldNumber_NewAccountResourceAmount = 9,
  UtxoMeta_FieldNumber_IrreversibleBlockHeight = 10,
  UtxoMeta_FieldNumber_IrreversibleSlideWindow = 11,
};

/**
 * Utxo metadata
 **/
@interface UtxoMeta : GPBMessage

/** utxo vm目前执行到的blockid */
@property(nonatomic, readwrite, copy, null_resettable) NSData *latestBlockid;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *lockKeyListArray;
/** The number of items in @c lockKeyListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger lockKeyListArray_Count;

/** 当前utxo vm上的总资产 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *utxoTotal;

/** 平均上链延时 */
@property(nonatomic, readwrite) int64_t avgDelay;

/** 待确认交易量 */
@property(nonatomic, readwrite) int64_t unconfirmTxAmount;

/** max block size */
@property(nonatomic, readwrite) int64_t maxBlockSize;

/** preset contracts */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<InvokeRequest*> *reservedContractsArray;
/** The number of items in @c reservedContractsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger reservedContractsArray_Count;

/** reset forbidden contract configuration */
@property(nonatomic, readwrite, strong, null_resettable) InvokeRequest *forbiddenContract;
/** Test to see if @c forbiddenContract has been set. */
@property(nonatomic, readwrite) BOOL hasForbiddenContract;

/** the resource amount of creating an account */
@property(nonatomic, readwrite) int64_t newAccountResourceAmount;

/** 当前不可逆区块高度，与utxo对齐 */
@property(nonatomic, readwrite) int64_t irreversibleBlockHeight;

/** 当前不可逆区块高度调整窗口 */
@property(nonatomic, readwrite) int64_t irreversibleSlideWindow;

@end

#pragma mark - InternalBlock

typedef GPB_ENUM(InternalBlock_FieldNumber) {
  InternalBlock_FieldNumber_Version = 1,
  InternalBlock_FieldNumber_Nonce = 2,
  InternalBlock_FieldNumber_Blockid = 3,
  InternalBlock_FieldNumber_PreHash = 4,
  InternalBlock_FieldNumber_Proposer = 5,
  InternalBlock_FieldNumber_Sign = 6,
  InternalBlock_FieldNumber_Pubkey = 7,
  InternalBlock_FieldNumber_MerkleRoot = 8,
  InternalBlock_FieldNumber_Height = 9,
  InternalBlock_FieldNumber_Timestamp = 10,
  InternalBlock_FieldNumber_TransactionsArray = 11,
  InternalBlock_FieldNumber_TxCount = 12,
  InternalBlock_FieldNumber_MerkleTreeArray = 13,
  InternalBlock_FieldNumber_InTrunk = 14,
  InternalBlock_FieldNumber_NextHash = 15,
  InternalBlock_FieldNumber_CurTerm = 16,
  InternalBlock_FieldNumber_CurBlockNum = 17,
  InternalBlock_FieldNumber_FailedTxs = 18,
  InternalBlock_FieldNumber_TargetBits = 19,
  InternalBlock_FieldNumber_Justify = 20,
};

/**
 * The internal block struct
 **/
@interface InternalBlock : GPBMessage

/** block version */
@property(nonatomic, readwrite) int32_t version;

/** Random number used to avoid replay attacks */
@property(nonatomic, readwrite) int32_t nonce;

/** blockid generate the hash sign of the block used by sha256 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *blockid;

/** pre_hash is the parent blockid of the block */
@property(nonatomic, readwrite, copy, null_resettable) NSData *preHash;

/** The miner id */
@property(nonatomic, readwrite, copy, null_resettable) NSData *proposer;

/** The sign which miner signed: blockid + nonce + timestamp */
@property(nonatomic, readwrite, copy, null_resettable) NSData *sign;

/** The pk of the miner */
@property(nonatomic, readwrite, copy, null_resettable) NSData *pubkey;

/** The Merkle Tree root */
@property(nonatomic, readwrite, copy, null_resettable) NSData *merkleRoot;

/** The height of the blockchain */
@property(nonatomic, readwrite) int64_t height;

/** Timestamp of the block */
@property(nonatomic, readwrite) int64_t timestamp;

/**
 * Transactions of the block, only txid stored on kv, the detail information
 * stored in another table
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Transaction*> *transactionsArray;
/** The number of items in @c transactionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger transactionsArray_Count;

/** The transaction count of the block */
@property(nonatomic, readwrite) int32_t txCount;

/** 所有交易hash的merkle tree */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *merkleTreeArray;
/** The number of items in @c merkleTreeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger merkleTreeArray_Count;

@property(nonatomic, readwrite) int64_t curTerm;

@property(nonatomic, readwrite) int64_t curBlockNum;

/** txid -> failed reason */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *failedTxs;
/** The number of items in @c failedTxs without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger failedTxs_Count;

@property(nonatomic, readwrite) int32_t targetBits;

/** Justify used in chained-bft */
@property(nonatomic, readwrite, strong, null_resettable) QuorumCert *justify;
/** Test to see if @c justify has been set. */
@property(nonatomic, readwrite) BOOL hasJustify;

/**
 * 下面的属性会动态变化
 * If the block is on the trunk
 **/
@property(nonatomic, readwrite) BOOL inTrunk;

/** Next next block which on trunk */
@property(nonatomic, readwrite, copy, null_resettable) NSData *nextHash;

@end

#pragma mark - BCStatus

typedef GPB_ENUM(BCStatus_FieldNumber) {
  BCStatus_FieldNumber_Header = 1,
  BCStatus_FieldNumber_Bcname = 2,
  BCStatus_FieldNumber_Meta = 3,
  BCStatus_FieldNumber_Block = 4,
  BCStatus_FieldNumber_UtxoMeta = 5,
  BCStatus_FieldNumber_BranchBlockidArray = 6,
};

/**
 * BlockChain status
 **/
@interface BCStatus : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

/** block name */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bcname;

/** ledger metadata */
@property(nonatomic, readwrite, strong, null_resettable) LedgerMeta *meta;
/** Test to see if @c meta has been set. */
@property(nonatomic, readwrite) BOOL hasMeta;

/** The information of the longest block */
@property(nonatomic, readwrite, strong, null_resettable) InternalBlock *block;
/** Test to see if @c block has been set. */
@property(nonatomic, readwrite) BOOL hasBlock;

/** Utox information */
@property(nonatomic, readwrite, strong, null_resettable) UtxoMeta *utxoMeta;
/** Test to see if @c utxoMeta has been set. */
@property(nonatomic, readwrite) BOOL hasUtxoMeta;

/** Branch info */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *branchBlockidArray;
/** The number of items in @c branchBlockidArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger branchBlockidArray_Count;

@end

#pragma mark - BCTipStatus

typedef GPB_ENUM(BCTipStatus_FieldNumber) {
  BCTipStatus_FieldNumber_Header = 1,
  BCTipStatus_FieldNumber_IsTrunkTip = 2,
};

@interface BCTipStatus : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite) BOOL isTrunkTip;

@end

#pragma mark - BlockChains

typedef GPB_ENUM(BlockChains_FieldNumber) {
  BlockChains_FieldNumber_Header = 1,
  BlockChains_FieldNumber_BlockchainsArray = 2,
};

@interface BlockChains : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *blockchainsArray;
/** The number of items in @c blockchainsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger blockchainsArray_Count;

@end

#pragma mark - Speeds

typedef GPB_ENUM(Speeds_FieldNumber) {
  Speeds_FieldNumber_SumSpeeds = 1,
  Speeds_FieldNumber_BcSpeeds = 2,
};

@interface Speeds : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBStringDoubleDictionary *sumSpeeds;
/** The number of items in @c sumSpeeds without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger sumSpeeds_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, BCSpeeds*> *bcSpeeds;
/** The number of items in @c bcSpeeds without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger bcSpeeds_Count;

@end

#pragma mark - BCSpeeds

typedef GPB_ENUM(BCSpeeds_FieldNumber) {
  BCSpeeds_FieldNumber_BcSpeed = 1,
};

@interface BCSpeeds : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBStringDoubleDictionary *bcSpeed;
/** The number of items in @c bcSpeed without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger bcSpeed_Count;

@end

#pragma mark - SystemsStatus

typedef GPB_ENUM(SystemsStatus_FieldNumber) {
  SystemsStatus_FieldNumber_Header = 1,
  SystemsStatus_FieldNumber_BcsStatusArray = 2,
  SystemsStatus_FieldNumber_Speeds = 3,
  SystemsStatus_FieldNumber_PeerUrlsArray = 4,
};

@interface SystemsStatus : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<BCStatus*> *bcsStatusArray;
/** The number of items in @c bcsStatusArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger bcsStatusArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) Speeds *speeds;
/** Test to see if @c speeds has been set. */
@property(nonatomic, readwrite) BOOL hasSpeeds;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *peerUrlsArray;
/** The number of items in @c peerUrlsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger peerUrlsArray_Count;

@end

#pragma mark - SystemsStatusReply

typedef GPB_ENUM(SystemsStatusReply_FieldNumber) {
  SystemsStatusReply_FieldNumber_Header = 1,
  SystemsStatusReply_FieldNumber_SystemsStatus = 2,
};

@interface SystemsStatusReply : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, strong, null_resettable) SystemsStatus *systemsStatus;
/** Test to see if @c systemsStatus has been set. */
@property(nonatomic, readwrite) BOOL hasSystemsStatus;

@end

#pragma mark - RawUrl

typedef GPB_ENUM(RawUrl_FieldNumber) {
  RawUrl_FieldNumber_Header = 1,
  RawUrl_FieldNumber_RawURL = 2,
};

/**
 * RawUrl return the node's  connect url
 **/
@interface RawUrl : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, copy, null_resettable) NSString *rawURL;

@end

#pragma mark - Utxo

typedef GPB_ENUM(Utxo_FieldNumber) {
  Utxo_FieldNumber_Amount = 1,
  Utxo_FieldNumber_ToAddr = 2,
  Utxo_FieldNumber_ToPubkey = 3,
  Utxo_FieldNumber_RefTxid = 4,
  Utxo_FieldNumber_RefOffset = 5,
};

@interface Utxo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *amount;

@property(nonatomic, readwrite, copy, null_resettable) NSData *toAddr;

@property(nonatomic, readwrite, copy, null_resettable) NSData *toPubkey;

@property(nonatomic, readwrite, copy, null_resettable) NSData *refTxid;

@property(nonatomic, readwrite) int32_t refOffset;

@end

#pragma mark - UtxoInput

typedef GPB_ENUM(UtxoInput_FieldNumber) {
  UtxoInput_FieldNumber_Header = 1,
  UtxoInput_FieldNumber_Bcname = 2,
  UtxoInput_FieldNumber_Address = 3,
  UtxoInput_FieldNumber_Publickey = 4,
  UtxoInput_FieldNumber_TotalNeed = 5,
  UtxoInput_FieldNumber_UserSign = 7,
  UtxoInput_FieldNumber_NeedLock = 8,
};

/**
 * UtxoInput query info to query utxos
 **/
@interface UtxoInput : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

/** which bcname to select */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bcname;

/** address to select */
@property(nonatomic, readwrite, copy, null_resettable) NSString *address;

/** publickey of the address */
@property(nonatomic, readwrite, copy, null_resettable) NSString *publickey;

/** totalNeed refer the total need utxos to select */
@property(nonatomic, readwrite, copy, null_resettable) NSString *totalNeed;

/** userSign of input */
@property(nonatomic, readwrite, copy, null_resettable) NSData *userSign;

/** need lock */
@property(nonatomic, readwrite) BOOL needLock;

@end

#pragma mark - UtxoOutput

typedef GPB_ENUM(UtxoOutput_FieldNumber) {
  UtxoOutput_FieldNumber_Header = 1,
  UtxoOutput_FieldNumber_UtxoListArray = 2,
  UtxoOutput_FieldNumber_TotalSelected = 3,
};

/**
 * UtxoOutput query results
 **/
@interface UtxoOutput : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

/**
 * outSign return the output
 * bytes outSign = 2;
 * utxo list
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Utxo*> *utxoListArray;
/** The number of items in @c utxoListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger utxoListArray_Count;

/** total selected amount */
@property(nonatomic, readwrite, copy, null_resettable) NSString *totalSelected;

@end

#pragma mark - NativeCodeDesc

typedef GPB_ENUM(NativeCodeDesc_FieldNumber) {
  NativeCodeDesc_FieldNumber_Name = 1,
  NativeCodeDesc_FieldNumber_Version = 2,
  NativeCodeDesc_FieldNumber_Digest = 3,
  NativeCodeDesc_FieldNumber_PrevVersion = 4,
  NativeCodeDesc_FieldNumber_XuperApiVersion = 5,
};

@interface NativeCodeDesc : GPBMessage

/** native code name */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** code version */
@property(nonatomic, readwrite, copy, null_resettable) NSString *version;

/** digest of binary */
@property(nonatomic, readwrite, copy, null_resettable) NSData *digest;

/** the previous verion */
@property(nonatomic, readwrite, copy, null_resettable) NSString *prevVersion;

/** xuper api version */
@property(nonatomic, readwrite) int32_t xuperApiVersion;

@end

#pragma mark - WasmCodeDesc

typedef GPB_ENUM(WasmCodeDesc_FieldNumber) {
  WasmCodeDesc_FieldNumber_Runtime = 1,
  WasmCodeDesc_FieldNumber_Compiler = 2,
  WasmCodeDesc_FieldNumber_Digest = 3,
  WasmCodeDesc_FieldNumber_VmCompiler = 4,
};

@interface WasmCodeDesc : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *runtime;

@property(nonatomic, readwrite, copy, null_resettable) NSString *compiler;

@property(nonatomic, readwrite, copy, null_resettable) NSData *digest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *vmCompiler;

@end

#pragma mark - DeployNativeCodeRequest

typedef GPB_ENUM(DeployNativeCodeRequest_FieldNumber) {
  DeployNativeCodeRequest_FieldNumber_Header = 1,
  DeployNativeCodeRequest_FieldNumber_Bcname = 2,
  DeployNativeCodeRequest_FieldNumber_Desc = 3,
  DeployNativeCodeRequest_FieldNumber_Code = 4,
  DeployNativeCodeRequest_FieldNumber_Address = 5,
  DeployNativeCodeRequest_FieldNumber_Pubkey = 6,
  DeployNativeCodeRequest_FieldNumber_Sign = 7,
};

@interface DeployNativeCodeRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

/** chain name */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bcname;

/** native code desc */
@property(nonatomic, readwrite, strong, null_resettable) NativeCodeDesc *desc;
/** Test to see if @c desc has been set. */
@property(nonatomic, readwrite) BOOL hasDesc;

/** code is the bytes of binary code */
@property(nonatomic, readwrite, copy, null_resettable) NSData *code;

/** the address of deployer */
@property(nonatomic, readwrite, copy, null_resettable) NSString *address;

/** the public key of deployer */
@property(nonatomic, readwrite, copy, null_resettable) NSData *pubkey;

/** the sign of desc */
@property(nonatomic, readwrite, copy, null_resettable) NSData *sign;

@end

#pragma mark - DeployNativeCodeResponse

typedef GPB_ENUM(DeployNativeCodeResponse_FieldNumber) {
  DeployNativeCodeResponse_FieldNumber_Header = 1,
};

@interface DeployNativeCodeResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@end

#pragma mark - NativeCodeStatus

typedef GPB_ENUM(NativeCodeStatus_FieldNumber) {
  NativeCodeStatus_FieldNumber_Desc = 1,
  NativeCodeStatus_FieldNumber_Status = 2,
  NativeCodeStatus_FieldNumber_Healthy = 3,
};

@interface NativeCodeStatus : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NativeCodeDesc *desc;
/** Test to see if @c desc has been set. */
@property(nonatomic, readwrite) BOOL hasDesc;

@property(nonatomic, readwrite) int32_t status;

@property(nonatomic, readwrite) BOOL healthy;

@end

#pragma mark - NativeCodeStatusRequest

typedef GPB_ENUM(NativeCodeStatusRequest_FieldNumber) {
  NativeCodeStatusRequest_FieldNumber_Header = 1,
  NativeCodeStatusRequest_FieldNumber_Bcname = 2,
};

@interface NativeCodeStatusRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bcname;

@end

#pragma mark - NativeCodeStatusResponse

typedef GPB_ENUM(NativeCodeStatusResponse_FieldNumber) {
  NativeCodeStatusResponse_FieldNumber_Header = 1,
  NativeCodeStatusResponse_FieldNumber_StatusArray = 2,
};

@interface NativeCodeStatusResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NativeCodeStatus*> *statusArray;
/** The number of items in @c statusArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger statusArray_Count;

@end

#pragma mark - DposCandidatesRequest

typedef GPB_ENUM(DposCandidatesRequest_FieldNumber) {
  DposCandidatesRequest_FieldNumber_Header = 1,
  DposCandidatesRequest_FieldNumber_Bcname = 2,
};

/**
 * 候选人列表接口
 **/
@interface DposCandidatesRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bcname;

@end

#pragma mark - DposCandidatesResponse

typedef GPB_ENUM(DposCandidatesResponse_FieldNumber) {
  DposCandidatesResponse_FieldNumber_Header = 1,
  DposCandidatesResponse_FieldNumber_CandidatesInfoArray = 2,
};

/**
 * 候选人列表返回
 **/
@interface DposCandidatesResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *candidatesInfoArray;
/** The number of items in @c candidatesInfoArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger candidatesInfoArray_Count;

@end

#pragma mark - DposNominateRecordsRequest

typedef GPB_ENUM(DposNominateRecordsRequest_FieldNumber) {
  DposNominateRecordsRequest_FieldNumber_Header = 1,
  DposNominateRecordsRequest_FieldNumber_Bcname = 2,
  DposNominateRecordsRequest_FieldNumber_Address = 3,
};

/**
 * 提名者提名记录请求
 **/
@interface DposNominateRecordsRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bcname;

@property(nonatomic, readwrite, copy, null_resettable) NSString *address;

@end

#pragma mark - DposNominateInfo

typedef GPB_ENUM(DposNominateInfo_FieldNumber) {
  DposNominateInfo_FieldNumber_Candidate = 1,
  DposNominateInfo_FieldNumber_Txid = 2,
};

/**
 * 候选人信息
 **/
@interface DposNominateInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *candidate;

@property(nonatomic, readwrite, copy, null_resettable) NSString *txid;

@end

#pragma mark - DposNominateRecordsResponse

typedef GPB_ENUM(DposNominateRecordsResponse_FieldNumber) {
  DposNominateRecordsResponse_FieldNumber_Header = 1,
  DposNominateRecordsResponse_FieldNumber_NominateRecordsArray = 2,
};

/**
 * 提名者提名记录返回
 **/
@interface DposNominateRecordsResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DposNominateInfo*> *nominateRecordsArray;
/** The number of items in @c nominateRecordsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger nominateRecordsArray_Count;

@end

#pragma mark - DposNomineeRecordsRequest

typedef GPB_ENUM(DposNomineeRecordsRequest_FieldNumber) {
  DposNomineeRecordsRequest_FieldNumber_Header = 1,
  DposNomineeRecordsRequest_FieldNumber_Bcname = 2,
  DposNomineeRecordsRequest_FieldNumber_Address = 3,
};

/**
 * 候选人被提名记录请求
 **/
@interface DposNomineeRecordsRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bcname;

@property(nonatomic, readwrite, copy, null_resettable) NSString *address;

@end

#pragma mark - DposNomineeRecordsResponse

typedef GPB_ENUM(DposNomineeRecordsResponse_FieldNumber) {
  DposNomineeRecordsResponse_FieldNumber_Header = 1,
  DposNomineeRecordsResponse_FieldNumber_Txid = 2,
};

/**
 * 候选人被提名记录返回
 **/
@interface DposNomineeRecordsResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, copy, null_resettable) NSString *txid;

@end

#pragma mark - DposVoteRecordsRequest

typedef GPB_ENUM(DposVoteRecordsRequest_FieldNumber) {
  DposVoteRecordsRequest_FieldNumber_Header = 1,
  DposVoteRecordsRequest_FieldNumber_Bcname = 2,
  DposVoteRecordsRequest_FieldNumber_Address = 3,
};

/**
 * 选民投票记录请求
 **/
@interface DposVoteRecordsRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bcname;

@property(nonatomic, readwrite, copy, null_resettable) NSString *address;

@end

#pragma mark - voteRecord

typedef GPB_ENUM(voteRecord_FieldNumber) {
  voteRecord_FieldNumber_Candidate = 1,
  voteRecord_FieldNumber_Txid = 2,
};

/**
 * 选民投票记录
 **/
@interface voteRecord : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *candidate;

@property(nonatomic, readwrite, copy, null_resettable) NSString *txid;

@end

#pragma mark - DposVoteRecordsResponse

typedef GPB_ENUM(DposVoteRecordsResponse_FieldNumber) {
  DposVoteRecordsResponse_FieldNumber_Header = 1,
  DposVoteRecordsResponse_FieldNumber_VoteTxidRecordsArray = 2,
};

/**
 * 选民投票记录返回
 **/
@interface DposVoteRecordsResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

/** 选民投票txid记录 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<voteRecord*> *voteTxidRecordsArray;
/** The number of items in @c voteTxidRecordsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger voteTxidRecordsArray_Count;

@end

#pragma mark - DposVotedRecordsRequest

typedef GPB_ENUM(DposVotedRecordsRequest_FieldNumber) {
  DposVotedRecordsRequest_FieldNumber_Header = 1,
  DposVotedRecordsRequest_FieldNumber_Bcname = 2,
  DposVotedRecordsRequest_FieldNumber_Address = 3,
};

/**
 * 候选人被投票记录请求
 **/
@interface DposVotedRecordsRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bcname;

@property(nonatomic, readwrite, copy, null_resettable) NSString *address;

@end

#pragma mark - votedRecord

typedef GPB_ENUM(votedRecord_FieldNumber) {
  votedRecord_FieldNumber_Voter = 1,
  votedRecord_FieldNumber_Txid = 2,
};

/**
 * 候选人被投票记录
 **/
@interface votedRecord : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *voter;

@property(nonatomic, readwrite, copy, null_resettable) NSString *txid;

@end

#pragma mark - DposVotedRecordsResponse

typedef GPB_ENUM(DposVotedRecordsResponse_FieldNumber) {
  DposVotedRecordsResponse_FieldNumber_Header = 1,
  DposVotedRecordsResponse_FieldNumber_VotedTxidRecordsArray = 2,
};

/**
 * 候选人被投票记录返回
 **/
@interface DposVotedRecordsResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

/** 候选人被投票的txid记录 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<votedRecord*> *votedTxidRecordsArray;
/** The number of items in @c votedTxidRecordsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger votedTxidRecordsArray_Count;

@end

#pragma mark - DposCheckResultsRequest

typedef GPB_ENUM(DposCheckResultsRequest_FieldNumber) {
  DposCheckResultsRequest_FieldNumber_Header = 1,
  DposCheckResultsRequest_FieldNumber_Bcname = 2,
  DposCheckResultsRequest_FieldNumber_Term = 3,
};

/**
 * 查询检票结果记录请求
 **/
@interface DposCheckResultsRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bcname;

@property(nonatomic, readwrite) int64_t term;

@end

#pragma mark - DposCheckResultsResponse

typedef GPB_ENUM(DposCheckResultsResponse_FieldNumber) {
  DposCheckResultsResponse_FieldNumber_Header = 1,
  DposCheckResultsResponse_FieldNumber_Term = 2,
  DposCheckResultsResponse_FieldNumber_CheckResultArray = 3,
};

/**
 * 查询检票结果记录返回
 **/
@interface DposCheckResultsResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite) int64_t term;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *checkResultArray;
/** The number of items in @c checkResultArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger checkResultArray_Count;

@end

#pragma mark - DposStatusRequest

typedef GPB_ENUM(DposStatusRequest_FieldNumber) {
  DposStatusRequest_FieldNumber_Header = 1,
  DposStatusRequest_FieldNumber_Bcname = 2,
};

/**
 * query dpos consensus current status request
 **/
@interface DposStatusRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bcname;

@end

#pragma mark - DposStatusResponse

typedef GPB_ENUM(DposStatusResponse_FieldNumber) {
  DposStatusResponse_FieldNumber_Header = 1,
  DposStatusResponse_FieldNumber_Status = 2,
};

/**
 * query dpos consensus current status reply
 **/
@interface DposStatusResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, strong, null_resettable) DposStatus *status;
/** Test to see if @c status has been set. */
@property(nonatomic, readwrite) BOOL hasStatus;

@end

#pragma mark - DposStatus

typedef GPB_ENUM(DposStatus_FieldNumber) {
  DposStatus_FieldNumber_Term = 1,
  DposStatus_FieldNumber_BlockNum = 2,
  DposStatus_FieldNumber_Proposer = 3,
  DposStatus_FieldNumber_ProposerNum = 4,
  DposStatus_FieldNumber_CheckResultArray = 5,
};

@interface DposStatus : GPBMessage

@property(nonatomic, readwrite) int64_t term;

@property(nonatomic, readwrite) int64_t blockNum;

@property(nonatomic, readwrite, copy, null_resettable) NSString *proposer;

@property(nonatomic, readwrite) int64_t proposerNum;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *checkResultArray;
/** The number of items in @c checkResultArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger checkResultArray_Count;

@end

#pragma mark - InvokeRPCRequest

typedef GPB_ENUM(InvokeRPCRequest_FieldNumber) {
  InvokeRPCRequest_FieldNumber_Header = 1,
  InvokeRPCRequest_FieldNumber_Bcname = 2,
  InvokeRPCRequest_FieldNumber_RequestsArray = 3,
  InvokeRPCRequest_FieldNumber_Initiator = 4,
  InvokeRPCRequest_FieldNumber_AuthRequireArray = 5,
};

@interface InvokeRPCRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bcname;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<InvokeRequest*> *requestsArray;
/** The number of items in @c requestsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger requestsArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *initiator;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *authRequireArray;
/** The number of items in @c authRequireArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger authRequireArray_Count;

@end

#pragma mark - InvokeRPCResponse

typedef GPB_ENUM(InvokeRPCResponse_FieldNumber) {
  InvokeRPCResponse_FieldNumber_Header = 1,
  InvokeRPCResponse_FieldNumber_Bcname = 2,
  InvokeRPCResponse_FieldNumber_Response = 3,
};

@interface InvokeRPCResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bcname;

@property(nonatomic, readwrite, strong, null_resettable) InvokeResponse *response;
/** Test to see if @c response has been set. */
@property(nonatomic, readwrite) BOOL hasResponse;

@end

#pragma mark - InvokeRequest

typedef GPB_ENUM(InvokeRequest_FieldNumber) {
  InvokeRequest_FieldNumber_ModuleName = 1,
  InvokeRequest_FieldNumber_ContractName = 2,
  InvokeRequest_FieldNumber_MethodName = 3,
  InvokeRequest_FieldNumber_Args = 4,
  InvokeRequest_FieldNumber_ResourceLimitsArray = 5,
  InvokeRequest_FieldNumber_Amount = 6,
};

/**
 * 预执行的请求结构
 **/
@interface InvokeRequest : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *moduleName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *contractName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *methodName;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSData*> *args;
/** The number of items in @c args without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger args_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ResourceLimit*> *resourceLimitsArray;
/** The number of items in @c resourceLimitsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger resourceLimitsArray_Count;

/**
 * amount is the amount transfer to the contract
 * attention: In one transaction, transfer to only one contract is allowed
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *amount;

@end

#pragma mark - InvokeResponse

typedef GPB_ENUM(InvokeResponse_FieldNumber) {
  InvokeResponse_FieldNumber_InputsArray = 1,
  InvokeResponse_FieldNumber_OutputsArray = 2,
  InvokeResponse_FieldNumber_ResponseArray = 3,
  InvokeResponse_FieldNumber_GasUsed = 4,
  InvokeResponse_FieldNumber_RequestsArray = 5,
  InvokeResponse_FieldNumber_ResponsesArray = 6,
  InvokeResponse_FieldNumber_UtxoInputsArray = 7,
  InvokeResponse_FieldNumber_UtxoOutputsArray = 8,
};

/**
 * 预执行的返回结构
 **/
@interface InvokeResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<TxInputExt*> *inputsArray;
/** The number of items in @c inputsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger inputsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<TxOutputExt*> *outputsArray;
/** The number of items in @c outputsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger outputsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *responseArray;
/** The number of items in @c responseArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger responseArray_Count;

@property(nonatomic, readwrite) int64_t gasUsed;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<InvokeRequest*> *requestsArray;
/** The number of items in @c requestsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger requestsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ContractResponse*> *responsesArray;
/** The number of items in @c responsesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger responsesArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<TxInput*> *utxoInputsArray;
/** The number of items in @c utxoInputsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger utxoInputsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<TxOutput*> *utxoOutputsArray;
/** The number of items in @c utxoOutputsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger utxoOutputsArray_Count;

@end

#pragma mark - TxInputExt

typedef GPB_ENUM(TxInputExt_FieldNumber) {
  TxInputExt_FieldNumber_Bucket = 1,
  TxInputExt_FieldNumber_Key = 2,
  TxInputExt_FieldNumber_RefTxid = 3,
  TxInputExt_FieldNumber_RefOffset = 4,
};

/**
 * 扩展输入
 **/
@interface TxInputExt : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *bucket;

@property(nonatomic, readwrite, copy, null_resettable) NSData *key;

@property(nonatomic, readwrite, copy, null_resettable) NSData *refTxid;

@property(nonatomic, readwrite) int32_t refOffset;

@end

#pragma mark - TxOutputExt

typedef GPB_ENUM(TxOutputExt_FieldNumber) {
  TxOutputExt_FieldNumber_Bucket = 1,
  TxOutputExt_FieldNumber_Key = 2,
  TxOutputExt_FieldNumber_Value = 3,
};

/**
 * 扩展输出
 **/
@interface TxOutputExt : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *bucket;

@property(nonatomic, readwrite, copy, null_resettable) NSData *key;

@property(nonatomic, readwrite, copy, null_resettable) NSData *value;

@end

#pragma mark - SignatureInfo

typedef GPB_ENUM(SignatureInfo_FieldNumber) {
  SignatureInfo_FieldNumber_PublicKey = 1,
  SignatureInfo_FieldNumber_Sign = 2,
};

/**
 * 签名详情
 **/
@interface SignatureInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *publicKey;

@property(nonatomic, readwrite, copy, null_resettable) NSData *sign;

@end

#pragma mark - PermissionModel

typedef GPB_ENUM(PermissionModel_FieldNumber) {
  PermissionModel_FieldNumber_Rule = 1,
  PermissionModel_FieldNumber_AcceptValue = 2,
};

@interface PermissionModel : GPBMessage

@property(nonatomic, readwrite) PermissionRule rule;

/** 取决于用哪种rule, 可以表示签名率，签名数或权重阈值 */
@property(nonatomic, readwrite) double acceptValue;

@end

/**
 * Fetches the raw value of a @c PermissionModel's @c rule property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PermissionModel_Rule_RawValue(PermissionModel *message);
/**
 * Sets the raw value of an @c PermissionModel's @c rule property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPermissionModel_Rule_RawValue(PermissionModel *message, int32_t value);

#pragma mark - AkSet

typedef GPB_ENUM(AkSet_FieldNumber) {
  AkSet_FieldNumber_AksArray = 1,
};

/**
 * AK集的表示方法
 **/
@interface AkSet : GPBMessage

/** 一堆公钥 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *aksArray;
/** The number of items in @c aksArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger aksArray_Count;

@end

#pragma mark - AkSets

typedef GPB_ENUM(AkSets_FieldNumber) {
  AkSets_FieldNumber_Sets = 1,
  AkSets_FieldNumber_Expression = 2,
};

@interface AkSets : GPBMessage

/** 公钥or账户名集 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, AkSet*> *sets;
/** The number of items in @c sets without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger sets_Count;

/** 表达式，一期不支持表达式，默认集合内是and，集合间是or */
@property(nonatomic, readwrite, copy, null_resettable) NSString *expression;

@end

#pragma mark - Acl

typedef GPB_ENUM(Acl_FieldNumber) {
  Acl_FieldNumber_Pm = 1,
  Acl_FieldNumber_AksWeight = 2,
  Acl_FieldNumber_AkSets = 3,
};

/**
 * Acl实际使用的结构
 **/
@interface Acl : GPBMessage

/** 采用的权限模型 */
@property(nonatomic, readwrite, strong, null_resettable) PermissionModel *pm;
/** Test to see if @c pm has been set. */
@property(nonatomic, readwrite) BOOL hasPm;

/** 公钥or账户名  -> 权重 */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringDoubleDictionary *aksWeight;
/** The number of items in @c aksWeight without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger aksWeight_Count;

@property(nonatomic, readwrite, strong, null_resettable) AkSets *akSets;
/** Test to see if @c akSets has been set. */
@property(nonatomic, readwrite) BOOL hasAkSets;

@end

#pragma mark - AclStatus

typedef GPB_ENUM(AclStatus_FieldNumber) {
  AclStatus_FieldNumber_Header = 1,
  AclStatus_FieldNumber_Bcname = 2,
  AclStatus_FieldNumber_AccountName = 3,
  AclStatus_FieldNumber_ContractName = 4,
  AclStatus_FieldNumber_MethodName = 5,
  AclStatus_FieldNumber_Confirmed = 6,
  AclStatus_FieldNumber_Acl = 7,
};

/**
 * 查询Acl
 **/
@interface AclStatus : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bcname;

@property(nonatomic, readwrite, copy, null_resettable) NSString *accountName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *contractName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *methodName;

@property(nonatomic, readwrite) BOOL confirmed;

@property(nonatomic, readwrite, strong, null_resettable) Acl *acl;
/** Test to see if @c acl has been set. */
@property(nonatomic, readwrite) BOOL hasAcl;

@end

#pragma mark - IdentityAuth

typedef GPB_ENUM(IdentityAuth_FieldNumber) {
  IdentityAuth_FieldNumber_Sign = 1,
  IdentityAuth_FieldNumber_Pubkey = 2,
  IdentityAuth_FieldNumber_Addr = 3,
  IdentityAuth_FieldNumber_PeerId = 4,
  IdentityAuth_FieldNumber_Timestamp = 5,
};

/**
 * Identity authentication request
 **/
@interface IdentityAuth : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *sign;

@property(nonatomic, readwrite, copy, null_resettable) NSData *pubkey;

@property(nonatomic, readwrite, copy, null_resettable) NSString *addr;

@property(nonatomic, readwrite, copy, null_resettable) NSString *peerId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *timestamp;

@end

#pragma mark - IdentityAuths

typedef GPB_ENUM(IdentityAuths_FieldNumber) {
  IdentityAuths_FieldNumber_AuthArray = 1,
};

/**
 * Identity authentication requests
 **/
@interface IdentityAuths : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<IdentityAuth*> *authArray;
/** The number of items in @c authArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger authArray_Count;

@end

#pragma mark - ResourceLimit

typedef GPB_ENUM(ResourceLimit_FieldNumber) {
  ResourceLimit_FieldNumber_Type = 1,
  ResourceLimit_FieldNumber_Limit = 2,
};

@interface ResourceLimit : GPBMessage

@property(nonatomic, readwrite) ResourceType type;

@property(nonatomic, readwrite) int64_t limit;

@end

/**
 * Fetches the raw value of a @c ResourceLimit's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ResourceLimit_Type_RawValue(ResourceLimit *message);
/**
 * Sets the raw value of an @c ResourceLimit's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetResourceLimit_Type_RawValue(ResourceLimit *message, int32_t value);

#pragma mark - AK2AccountRequest

typedef GPB_ENUM(AK2AccountRequest_FieldNumber) {
  AK2AccountRequest_FieldNumber_Header = 1,
  AK2AccountRequest_FieldNumber_Bcname = 2,
  AK2AccountRequest_FieldNumber_Address = 3,
};

@interface AK2AccountRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bcname;

@property(nonatomic, readwrite, copy, null_resettable) NSString *address;

@end

#pragma mark - AK2AccountResponse

typedef GPB_ENUM(AK2AccountResponse_FieldNumber) {
  AK2AccountResponse_FieldNumber_Header = 1,
  AK2AccountResponse_FieldNumber_Bcname = 2,
  AK2AccountResponse_FieldNumber_AccountArray = 3,
};

@interface AK2AccountResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bcname;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *accountArray;
/** The number of items in @c accountArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger accountArray_Count;

@end

#pragma mark - GetAccountContractsRequest

typedef GPB_ENUM(GetAccountContractsRequest_FieldNumber) {
  GetAccountContractsRequest_FieldNumber_Header = 1,
  GetAccountContractsRequest_FieldNumber_Bcname = 2,
  GetAccountContractsRequest_FieldNumber_Account = 3,
};

/**
 * Query account contracts request
 **/
@interface GetAccountContractsRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bcname;

@property(nonatomic, readwrite, copy, null_resettable) NSString *account;

@end

#pragma mark - GetAccountContractsResponse

typedef GPB_ENUM(GetAccountContractsResponse_FieldNumber) {
  GetAccountContractsResponse_FieldNumber_Header = 1,
  GetAccountContractsResponse_FieldNumber_ContractsStatusArray = 2,
};

/**
 * Query account contracts response
 **/
@interface GetAccountContractsResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ContractStatus*> *contractsStatusArray;
/** The number of items in @c contractsStatusArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger contractsStatusArray_Count;

@end

#pragma mark - ContractStatus

typedef GPB_ENUM(ContractStatus_FieldNumber) {
  ContractStatus_FieldNumber_ContractName = 1,
  ContractStatus_FieldNumber_Txid = 2,
  ContractStatus_FieldNumber_Desc = 3,
  ContractStatus_FieldNumber_IsBanned = 4,
};

/**
 * Status of a contract
 **/
@interface ContractStatus : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *contractName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *txid;

@property(nonatomic, readwrite, copy, null_resettable) NSData *desc;

@property(nonatomic, readwrite) BOOL isBanned;

@end

#pragma mark - PreExecWithSelectUTXORequest

typedef GPB_ENUM(PreExecWithSelectUTXORequest_FieldNumber) {
  PreExecWithSelectUTXORequest_FieldNumber_Header = 1,
  PreExecWithSelectUTXORequest_FieldNumber_Bcname = 2,
  PreExecWithSelectUTXORequest_FieldNumber_Address = 3,
  PreExecWithSelectUTXORequest_FieldNumber_TotalAmount = 4,
  PreExecWithSelectUTXORequest_FieldNumber_Request = 5,
  PreExecWithSelectUTXORequest_FieldNumber_SignInfo = 6,
  PreExecWithSelectUTXORequest_FieldNumber_NeedLock = 7,
};

/**
 * PreExecWithSelectUTXORequest preExec + selectUtxo for request
 **/
@interface PreExecWithSelectUTXORequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bcname;

@property(nonatomic, readwrite, copy, null_resettable) NSString *address;

@property(nonatomic, readwrite) int64_t totalAmount;

@property(nonatomic, readwrite, strong, null_resettable) SignatureInfo *signInfo;
/** Test to see if @c signInfo has been set. */
@property(nonatomic, readwrite) BOOL hasSignInfo;

@property(nonatomic, readwrite) BOOL needLock;

@property(nonatomic, readwrite, strong, null_resettable) InvokeRPCRequest *request;
/** Test to see if @c request has been set. */
@property(nonatomic, readwrite) BOOL hasRequest;

@end

#pragma mark - PreExecWithSelectUTXOResponse

typedef GPB_ENUM(PreExecWithSelectUTXOResponse_FieldNumber) {
  PreExecWithSelectUTXOResponse_FieldNumber_Header = 1,
  PreExecWithSelectUTXOResponse_FieldNumber_Bcname = 2,
  PreExecWithSelectUTXOResponse_FieldNumber_Response = 3,
  PreExecWithSelectUTXOResponse_FieldNumber_UtxoOutput = 4,
};

/**
 * PreExecWithSelectUTXOResponse preExec + selectUtxo for response
 **/
@interface PreExecWithSelectUTXOResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, copy, null_resettable) NSString *bcname;

@property(nonatomic, readwrite, strong, null_resettable) InvokeResponse *response;
/** Test to see if @c response has been set. */
@property(nonatomic, readwrite) BOOL hasResponse;

/** for preExec & selectUTXO */
@property(nonatomic, readwrite, strong, null_resettable) UtxoOutput *utxoOutput;
/** Test to see if @c utxoOutput has been set. */
@property(nonatomic, readwrite) BOOL hasUtxoOutput;

@end

#pragma mark - ContractResponse

typedef GPB_ENUM(ContractResponse_FieldNumber) {
  ContractResponse_FieldNumber_Status = 1,
  ContractResponse_FieldNumber_Message = 2,
  ContractResponse_FieldNumber_Body = 3,
};

/**
 * ContractResponse is the response returnd by contract
 **/
@interface ContractResponse : GPBMessage

@property(nonatomic, readwrite) int32_t status;

@property(nonatomic, readwrite, copy, null_resettable) NSString *message;

@property(nonatomic, readwrite, copy, null_resettable) NSData *body;

@end

#pragma mark - ModifyBlock

typedef GPB_ENUM(ModifyBlock_FieldNumber) {
  ModifyBlock_FieldNumber_EffectiveTxid = 1,
  ModifyBlock_FieldNumber_Marked = 2,
  ModifyBlock_FieldNumber_EffectiveHeight = 3,
  ModifyBlock_FieldNumber_PublicKey = 4,
  ModifyBlock_FieldNumber_Sign = 5,
};

@interface ModifyBlock : GPBMessage

/** txid交易被effective_txid的交易提出可修改区块链的请求 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *effectiveTxid;

/** 本交易是否已被修改标记 */
@property(nonatomic, readwrite) BOOL marked;

/** txid交易被修改生效的高度 */
@property(nonatomic, readwrite) int64_t effectiveHeight;

/** 监管的public key */
@property(nonatomic, readwrite, copy, null_resettable) NSString *publicKey;

/** 监管地址对修改的交易id的签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sign;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
